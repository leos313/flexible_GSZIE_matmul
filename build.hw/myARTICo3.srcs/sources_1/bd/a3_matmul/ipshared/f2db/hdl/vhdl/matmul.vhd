-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    reg_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    reg_0_o_ap_vld : OUT STD_LOGIC;
    bram_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    bram_0_EN_A : OUT STD_LOGIC;
    bram_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    bram_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    bram_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    bram_0_Clk_A : OUT STD_LOGIC;
    bram_0_Rst_A : OUT STD_LOGIC;
    bram_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    bram_1_EN_A : OUT STD_LOGIC;
    bram_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    bram_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    bram_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    bram_1_Clk_A : OUT STD_LOGIC;
    bram_1_Rst_A : OUT STD_LOGIC;
    bram_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    bram_2_EN_A : OUT STD_LOGIC;
    bram_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    bram_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    bram_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    bram_2_Clk_A : OUT STD_LOGIC;
    bram_2_Rst_A : OUT STD_LOGIC;
    values : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of matmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.734600,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=39,HLS_SYN_FF=2051,HLS_SYN_LUT=2101}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv58_1 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_570 : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_reg_581 : STD_LOGIC_VECTOR (3 downto 0);
    signal j2_reg_592 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten2_reg_638 : STD_LOGIC_VECTOR (6 downto 0);
    signal i2_2_reg_649 : STD_LOGIC_VECTOR (3 downto 0);
    signal j2_2_reg_660 : STD_LOGIC_VECTOR (3 downto 0);
    signal dummy_1_load_reg_1168 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_4_fu_696_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1177 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_704_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal bound_reg_1182 : STD_LOGIC_VECTOR (57 downto 0);
    signal exitcond_flatten1_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal indvar_flatten_next1_fu_715_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal indvar_flatten_next1_reg_1191 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_2_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1196 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_mid2_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_mid2_fu_740_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_mid2_reg_1209 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1217 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal indvar_flatten_next_fu_754_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp1_mid2_v_v_v_v_fu_780_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp1_mid2_v_v_v_v_reg_1226 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_3_fu_817_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_s_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_6_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_845_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i2_3_fu_860_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i2_3_reg_1258 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_871_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1263 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_894_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_1268 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_0_addr_reg_1273 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_1_addr_reg_1278 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_2_addr_reg_1283 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_3_addr_reg_1288 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_4_addr_reg_1293 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_5_addr_reg_1298 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_6_addr_reg_1303 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_7_addr_reg_1308 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_fu_899_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_reg_1313 : STD_LOGIC_VECTOR (2 downto 0);
    signal j2_1_cast_fu_903_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_1_cast_reg_1317 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal j2_4_fu_913_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j2_4_reg_1325 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal b_local_0_addr_1_reg_1343 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_1_addr_1_reg_1348 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_2_addr_1_reg_1353 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_3_addr_1_reg_1358 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_4_addr_1_reg_1363 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_5_addr_1_reg_1368 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_6_addr_1_reg_1373 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_7_addr_1_reg_1378 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten2_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten2_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state12_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_flag00011001 : BOOLEAN;
    signal indvar_flatten_next2_fu_971_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_next2_reg_1387 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal a_local_0_load_mid2_1_fu_997_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_local_0_load_mid2_1_reg_1392 : STD_LOGIC_VECTOR (3 downto 0);
    signal bram_2_addr_1_reg_1442 : STD_LOGIC_VECTOR (11 downto 0);
    signal j2_5_fu_1063_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j2_5_reg_1482 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_local_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_5_load_reg_1487 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state13_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_flag00011001 : BOOLEAN;
    signal a_local_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_6_load_reg_1492 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_7_load_reg_1497 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1069_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_1502 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_1_fu_1075_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_1_reg_1507 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_2_fu_1081_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_2_reg_1512 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_5_load_reg_1517 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_6_load_reg_1522 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_7_load_reg_1527 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1099_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_1532 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_1_fu_1156_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1_flag00011011 : BOOLEAN;
    signal a_local_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_0_ce0 : STD_LOGIC;
    signal a_local_0_we0 : STD_LOGIC;
    signal a_local_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_1_ce0 : STD_LOGIC;
    signal a_local_1_we0 : STD_LOGIC;
    signal a_local_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_2_ce0 : STD_LOGIC;
    signal a_local_2_we0 : STD_LOGIC;
    signal a_local_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_3_ce0 : STD_LOGIC;
    signal a_local_3_we0 : STD_LOGIC;
    signal a_local_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_4_ce0 : STD_LOGIC;
    signal a_local_4_we0 : STD_LOGIC;
    signal a_local_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_local_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_5_ce0 : STD_LOGIC;
    signal a_local_5_we0 : STD_LOGIC;
    signal a_local_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_6_ce0 : STD_LOGIC;
    signal a_local_6_we0 : STD_LOGIC;
    signal a_local_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_local_7_ce0 : STD_LOGIC;
    signal a_local_7_we0 : STD_LOGIC;
    signal b_local_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_0_ce0 : STD_LOGIC;
    signal b_local_0_we0 : STD_LOGIC;
    signal b_local_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_1_ce0 : STD_LOGIC;
    signal b_local_1_we0 : STD_LOGIC;
    signal b_local_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_2_ce0 : STD_LOGIC;
    signal b_local_2_we0 : STD_LOGIC;
    signal b_local_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_3_ce0 : STD_LOGIC;
    signal b_local_3_we0 : STD_LOGIC;
    signal b_local_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_4_ce0 : STD_LOGIC;
    signal b_local_4_we0 : STD_LOGIC;
    signal b_local_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_local_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_5_ce0 : STD_LOGIC;
    signal b_local_5_we0 : STD_LOGIC;
    signal b_local_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_6_ce0 : STD_LOGIC;
    signal b_local_6_we0 : STD_LOGIC;
    signal b_local_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_local_7_ce0 : STD_LOGIC;
    signal b_local_7_we0 : STD_LOGIC;
    signal indvar_flatten1_reg_525 : STD_LOGIC_VECTOR (57 downto 0);
    signal i_reg_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_547 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_559 : STD_LOGIC_VECTOR (31 downto 0);
    signal i2_phi_fu_585_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal k_reg_603 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i2_1_reg_615 : STD_LOGIC_VECTOR (3 downto 0);
    signal j2_1_reg_626 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal indvar_flatten2_phi_fu_642_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp1_stage0_flag00000000 : BOOLEAN;
    signal i2_2_phi_fu_653_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal j2_2_phi_fu_664_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_960_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_local_0_load_mid2_fu_1005_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1058_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dummy_1_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal bram_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage1_flag00000000 : BOOLEAN;
    signal tmp_36_7_fu_1149_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bram_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_947_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal bram_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_680_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_write_assign_fu_686_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal bound_fu_704_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal cast_cast_fu_700_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal bound_fu_704_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal i_s_fu_734_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_s_fu_774_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp1_mid2_v_v_v_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_mid2_v_v_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_mid2_v_fu_797_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_mid2_fu_766_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp1_mid2_fu_802_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_cast_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_op_fu_832_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i2_1_cast_fu_850_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_866_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_888_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_919_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_925_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_955_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_4_fu_991_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp4_mid2_v_v_v_fu_1017_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_mid2_v_v_fu_1021_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_mid2_v_fu_1026_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_2_mid2_fu_983_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j2_2_cast_fu_1036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_mid2_fu_1031_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1052_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1069_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_1_fu_1075_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_1_fu_1075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_2_fu_1081_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_2_fu_1081_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_3_fu_1087_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_3_fu_1087_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_4_fu_1093_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_4_fu_1093_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_4_fu_1093_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_3_fu_1087_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1117_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1122_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_7_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_6_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_5_fu_1105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1132_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1138_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component matmul_a_local_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    a_local_0_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_0_address0,
        ce0 => a_local_0_ce0,
        we0 => a_local_0_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_0_q0);

    a_local_1_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_1_address0,
        ce0 => a_local_1_ce0,
        we0 => a_local_1_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_1_q0);

    a_local_2_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_2_address0,
        ce0 => a_local_2_ce0,
        we0 => a_local_2_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_2_q0);

    a_local_3_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_3_address0,
        ce0 => a_local_3_ce0,
        we0 => a_local_3_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_3_q0);

    a_local_4_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_4_address0,
        ce0 => a_local_4_ce0,
        we0 => a_local_4_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_4_q0);

    a_local_5_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_5_address0,
        ce0 => a_local_5_ce0,
        we0 => a_local_5_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_5_q0);

    a_local_6_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_6_address0,
        ce0 => a_local_6_ce0,
        we0 => a_local_6_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_6_q0);

    a_local_7_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_local_7_address0,
        ce0 => a_local_7_ce0,
        we0 => a_local_7_we0,
        d0 => bram_0_Dout_A,
        q0 => a_local_7_q0);

    b_local_0_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_0_address0,
        ce0 => b_local_0_ce0,
        we0 => b_local_0_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_0_q0);

    b_local_1_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_1_address0,
        ce0 => b_local_1_ce0,
        we0 => b_local_1_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_1_q0);

    b_local_2_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_2_address0,
        ce0 => b_local_2_ce0,
        we0 => b_local_2_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_2_q0);

    b_local_3_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_3_address0,
        ce0 => b_local_3_ce0,
        we0 => b_local_3_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_3_q0);

    b_local_4_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_4_address0,
        ce0 => b_local_4_ce0,
        we0 => b_local_4_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_4_q0);

    b_local_5_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_5_address0,
        ce0 => b_local_5_ce0,
        we0 => b_local_5_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_5_q0);

    b_local_6_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_6_address0,
        ce0 => b_local_6_ce0,
        we0 => b_local_6_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_6_q0);

    b_local_7_U : component matmul_a_local_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_local_7_address0,
        ce0 => b_local_7_ce0,
        we0 => b_local_7_we0,
        d0 => bram_1_Dout_A,
        q0 => b_local_7_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state4 xor ap_const_logic_1);
                elsif ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_1_fu_854_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state12 xor ap_const_logic_1);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_1_fu_854_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i2_1_reg_615_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_6_fu_827_p2 = ap_const_lv1_1))) then 
                i2_1_reg_615 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_15_fu_907_p2 = ap_const_lv1_1))) then 
                i2_1_reg_615 <= i2_3_reg_1258;
            end if; 
        end if;
    end process;

    i2_2_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_1_fu_854_p2 = ap_const_lv1_1))) then 
                i2_2_reg_649 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                i2_2_reg_649 <= a_local_0_load_mid2_1_reg_1392;
            end if; 
        end if;
    end process;

    i2_reg_581_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1217))) then 
                i2_reg_581 <= tmp1_mid2_v_v_v_v_reg_1226;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_0))) then 
                i2_reg_581 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_827_p2))) then 
                i_reg_536 <= i_mid2_reg_1209;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_536 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_827_p2))) then 
                indvar_flatten1_reg_525 <= indvar_flatten_next1_reg_1191;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten1_reg_525 <= ap_const_lv58_0;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_1_fu_854_p2 = ap_const_lv1_1))) then 
                indvar_flatten2_reg_638 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                indvar_flatten2_reg_638 <= indvar_flatten_next2_reg_1387;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_748_p2))) then 
                indvar_flatten_reg_570 <= indvar_flatten_next_fu_754_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_570 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    j2_1_reg_626_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_1_fu_854_p2))) then 
                j2_1_reg_626 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                j2_1_reg_626 <= j2_4_reg_1325;
            end if; 
        end if;
    end process;

    j2_2_reg_660_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_1_fu_854_p2 = ap_const_lv1_1))) then 
                j2_2_reg_660 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                j2_2_reg_660 <= j2_5_reg_1482;
            end if; 
        end if;
    end process;

    j2_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_748_p2))) then 
                j2_reg_592 <= j2_3_fu_817_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_0))) then 
                j2_reg_592 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j_reg_559_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_827_p2))) then 
                j_reg_559 <= j_1_fu_845_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                j_reg_559 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    k_reg_603_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                k_reg_603 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                k_reg_603 <= k_1_fu_1156_p2;
            end if; 
        end if;
    end process;

    tmp_5_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_827_p2))) then 
                tmp_5_reg_547 <= j_s_fu_838_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                tmp_5_reg_547 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_1_fu_854_p2))) then
                a_local_0_addr_reg_1273 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                a_local_1_addr_reg_1278 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                a_local_2_addr_reg_1283 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                a_local_3_addr_reg_1288 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                a_local_4_addr_reg_1293 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                a_local_5_addr_reg_1298 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                a_local_6_addr_reg_1303 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                a_local_7_addr_reg_1308 <= tmp_11_fu_876_p1(3 - 1 downto 0);
                tmp_10_reg_1263 <= tmp_10_fu_871_p2;
                tmp_13_reg_1268 <= tmp_13_fu_894_p2;
                tmp_14_reg_1313 <= tmp_14_fu_899_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten2_fu_965_p2))) then
                a_local_0_load_mid2_1_reg_1392 <= a_local_0_load_mid2_1_fu_997_p3;
                j2_5_reg_1482 <= j2_5_fu_1063_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383))) then
                a_local_5_load_reg_1487 <= a_local_5_q0;
                a_local_6_load_reg_1492 <= a_local_6_q0;
                a_local_7_load_reg_1497 <= a_local_7_q0;
                b_local_5_load_reg_1517 <= b_local_5_q0;
                b_local_6_load_reg_1522 <= b_local_6_q0;
                b_local_7_load_reg_1527 <= b_local_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                b_local_0_addr_1_reg_1343 <= tmp_22_fu_935_p1(3 - 1 downto 0);
                b_local_1_addr_1_reg_1348 <= tmp_22_fu_935_p1(3 - 1 downto 0);
                b_local_2_addr_1_reg_1353 <= tmp_22_fu_935_p1(3 - 1 downto 0);
                b_local_3_addr_1_reg_1358 <= tmp_22_fu_935_p1(3 - 1 downto 0);
                b_local_4_addr_1_reg_1363 <= tmp_22_fu_935_p1(3 - 1 downto 0);
                b_local_5_addr_1_reg_1368 <= tmp_22_fu_935_p1(3 - 1 downto 0);
                b_local_6_addr_1_reg_1373 <= tmp_22_fu_935_p1(3 - 1 downto 0);
                b_local_7_addr_1_reg_1378 <= tmp_22_fu_935_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_1182 <= bound_fu_704_p2;
                dummy_1_load_reg_1168 <= dummy_1_fu_112;
                    tmp_4_reg_1177(28 downto 0) <= tmp_4_fu_696_p1(28 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten2_fu_965_p2))) then
                bram_2_addr_1_reg_1442 <= tmp_24_fu_1058_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                dummy_1_fu_112 <= reg_0_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0))) then
                exitcond_flatten2_reg_1383 <= exitcond_flatten2_fu_965_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                exitcond_flatten_reg_1217 <= exitcond_flatten_fu_748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i2_3_reg_1258 <= i2_3_fu_860_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_0))) then
                i_mid2_reg_1209 <= i_mid2_fu_740_p3;
                j_mid2_reg_1201 <= j_mid2_fu_726_p3;
                tmp_2_reg_1196 <= tmp_2_fu_721_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                indvar_flatten_next1_reg_1191 <= indvar_flatten_next1_fu_715_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                indvar_flatten_next2_reg_1387 <= indvar_flatten_next2_fu_971_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    j2_1_cast_reg_1317(3 downto 0) <= j2_1_cast_fu_903_p1(3 downto 0);
                j2_4_reg_1325 <= j2_4_fu_913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_748_p2))) then
                tmp1_mid2_v_v_v_v_reg_1226 <= tmp1_mid2_v_v_v_v_fu_780_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383))) then
                tmp9_reg_1532 <= tmp9_fu_1099_p2;
                tmp_19_reg_1502 <= tmp_19_fu_1069_p2;
                tmp_31_1_reg_1507 <= tmp_31_1_fu_1075_p2;
                tmp_31_2_reg_1512 <= tmp_31_2_fu_1081_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_748_p2))) then
                tmp_8_reg_1231 <= tmp_8_fu_811_p2;
            end if;
        end if;
    end process;
    tmp_4_reg_1177(31 downto 29) <= "000";
    j2_1_cast_reg_1317(31 downto 4) <= "0000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten1_fu_710_p2, ap_CS_fsm_state3, exitcond_flatten_fu_748_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, tmp_6_fu_827_p2, tmp_1_fu_854_p2, ap_CS_fsm_state8, ap_CS_fsm_state9, tmp_15_fu_907_p2, exitcond_flatten2_fu_965_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_flag00011011, ap_block_pp1_stage0_flag00011011, ap_block_pp1_stage1_flag00011011)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_748_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten_fu_748_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_827_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_1_fu_854_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_15_fu_907_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_pp1_stage0 => 
                if (((ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten2_fu_965_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00011011 = ap_const_boolean_0) and (exitcond_flatten2_fu_965_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_block_pp1_stage1_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;

    a_local_0_address0_assign_proc : process(a_local_0_addr_reg_1273, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_0_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_0_address0 <= a_local_0_addr_reg_1273;
        else 
            a_local_0_address0 <= "XXX";
        end if; 
    end process;


    a_local_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_0_ce0 <= ap_const_logic_1;
        else 
            a_local_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    a_local_0_load_mid2_1_fu_997_p3 <= 
        i2_4_fu_991_p2 when (tmp_16_fu_977_p2(0) = '1') else 
        i2_2_phi_fu_653_p4;
    a_local_0_load_mid2_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_local_0_load_mid2_1_fu_997_p3),64));

    a_local_0_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_0))) then 
            a_local_0_we0 <= ap_const_logic_1;
        else 
            a_local_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_1_address0_assign_proc : process(a_local_1_addr_reg_1278, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_1_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_1_address0 <= a_local_1_addr_reg_1278;
        else 
            a_local_1_address0 <= "XXX";
        end if; 
    end process;


    a_local_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_1_ce0 <= ap_const_logic_1;
        else 
            a_local_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_1_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_1))) then 
            a_local_1_we0 <= ap_const_logic_1;
        else 
            a_local_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_2_address0_assign_proc : process(a_local_2_addr_reg_1283, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_2_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_2_address0 <= a_local_2_addr_reg_1283;
        else 
            a_local_2_address0 <= "XXX";
        end if; 
    end process;


    a_local_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_2_ce0 <= ap_const_logic_1;
        else 
            a_local_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_2_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_2))) then 
            a_local_2_we0 <= ap_const_logic_1;
        else 
            a_local_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_3_address0_assign_proc : process(a_local_3_addr_reg_1288, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_3_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_3_address0 <= a_local_3_addr_reg_1288;
        else 
            a_local_3_address0 <= "XXX";
        end if; 
    end process;


    a_local_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_3_ce0 <= ap_const_logic_1;
        else 
            a_local_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_3_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_3))) then 
            a_local_3_we0 <= ap_const_logic_1;
        else 
            a_local_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_4_address0_assign_proc : process(a_local_4_addr_reg_1293, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_4_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_4_address0 <= a_local_4_addr_reg_1293;
        else 
            a_local_4_address0 <= "XXX";
        end if; 
    end process;


    a_local_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_4_ce0 <= ap_const_logic_1;
        else 
            a_local_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_4_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_4))) then 
            a_local_4_we0 <= ap_const_logic_1;
        else 
            a_local_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_5_address0_assign_proc : process(a_local_5_addr_reg_1298, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_5_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_5_address0 <= a_local_5_addr_reg_1298;
        else 
            a_local_5_address0 <= "XXX";
        end if; 
    end process;


    a_local_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_5_ce0 <= ap_const_logic_1;
        else 
            a_local_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_5_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_5))) then 
            a_local_5_we0 <= ap_const_logic_1;
        else 
            a_local_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_6_address0_assign_proc : process(a_local_6_addr_reg_1303, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_6_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_6_address0 <= a_local_6_addr_reg_1303;
        else 
            a_local_6_address0 <= "XXX";
        end if; 
    end process;


    a_local_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_6_ce0 <= ap_const_logic_1;
        else 
            a_local_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_6_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_6))) then 
            a_local_6_we0 <= ap_const_logic_1;
        else 
            a_local_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_7_address0_assign_proc : process(a_local_7_addr_reg_1308, ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_flag00000000, a_local_0_load_mid2_fu_1005_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            a_local_7_address0 <= a_local_0_load_mid2_fu_1005_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_local_7_address0 <= a_local_7_addr_reg_1308;
        else 
            a_local_7_address0 <= "XXX";
        end if; 
    end process;


    a_local_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then 
            a_local_7_ce0 <= ap_const_logic_1;
        else 
            a_local_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_local_7_we0_assign_proc : process(ap_CS_fsm_state10, tmp_27_fu_947_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (tmp_27_fu_947_p1 = ap_const_lv3_7))) then 
            a_local_7_we0 <= ap_const_logic_1;
        else 
            a_local_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state15 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond_flatten_fu_748_p2)
    begin
        if ((exitcond_flatten_fu_748_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state12_assign_proc : process(exitcond_flatten2_fu_965_p2)
    begin
        if ((exitcond_flatten2_fu_965_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(exitcond_flatten1_fu_710_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond_flatten1_fu_710_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_flatten1_fu_710_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    b_local_0_address0_assign_proc : process(b_local_0_addr_1_reg_1343, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_0_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_0_address0 <= b_local_0_addr_1_reg_1343;
        else 
            b_local_0_address0 <= "XXX";
        end if; 
    end process;


    b_local_0_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_0_ce0 <= ap_const_logic_1;
        else 
            b_local_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_0_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_0))) then 
            b_local_0_we0 <= ap_const_logic_1;
        else 
            b_local_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_1_address0_assign_proc : process(b_local_1_addr_1_reg_1348, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_1_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_1_address0 <= b_local_1_addr_1_reg_1348;
        else 
            b_local_1_address0 <= "XXX";
        end if; 
    end process;


    b_local_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_1_ce0 <= ap_const_logic_1;
        else 
            b_local_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_1_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_1))) then 
            b_local_1_we0 <= ap_const_logic_1;
        else 
            b_local_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_2_address0_assign_proc : process(b_local_2_addr_1_reg_1353, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_2_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_2_address0 <= b_local_2_addr_1_reg_1353;
        else 
            b_local_2_address0 <= "XXX";
        end if; 
    end process;


    b_local_2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_2_ce0 <= ap_const_logic_1;
        else 
            b_local_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_2_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_2))) then 
            b_local_2_we0 <= ap_const_logic_1;
        else 
            b_local_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_3_address0_assign_proc : process(b_local_3_addr_1_reg_1358, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_3_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_3_address0 <= b_local_3_addr_1_reg_1358;
        else 
            b_local_3_address0 <= "XXX";
        end if; 
    end process;


    b_local_3_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_3_ce0 <= ap_const_logic_1;
        else 
            b_local_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_3_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_3))) then 
            b_local_3_we0 <= ap_const_logic_1;
        else 
            b_local_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_4_address0_assign_proc : process(b_local_4_addr_1_reg_1363, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_4_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_4_address0 <= b_local_4_addr_1_reg_1363;
        else 
            b_local_4_address0 <= "XXX";
        end if; 
    end process;


    b_local_4_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_4_ce0 <= ap_const_logic_1;
        else 
            b_local_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_4_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_4))) then 
            b_local_4_we0 <= ap_const_logic_1;
        else 
            b_local_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_5_address0_assign_proc : process(b_local_5_addr_1_reg_1368, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_5_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_5_address0 <= b_local_5_addr_1_reg_1368;
        else 
            b_local_5_address0 <= "XXX";
        end if; 
    end process;


    b_local_5_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_5_ce0 <= ap_const_logic_1;
        else 
            b_local_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_5_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_5))) then 
            b_local_5_we0 <= ap_const_logic_1;
        else 
            b_local_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_6_address0_assign_proc : process(b_local_6_addr_1_reg_1373, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_6_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_6_address0 <= b_local_6_addr_1_reg_1373;
        else 
            b_local_6_address0 <= "XXX";
        end if; 
    end process;


    b_local_6_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_6_ce0 <= ap_const_logic_1;
        else 
            b_local_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_6_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_6))) then 
            b_local_6_we0 <= ap_const_logic_1;
        else 
            b_local_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_7_address0_assign_proc : process(b_local_7_addr_1_reg_1378, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, ap_block_pp1_stage0_flag00000000, tmp_18_fu_1040_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            b_local_7_address0 <= tmp_18_fu_1040_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_local_7_address0 <= b_local_7_addr_1_reg_1378;
        else 
            b_local_7_address0 <= "XXX";
        end if; 
    end process;


    b_local_7_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            b_local_7_ce0 <= ap_const_logic_1;
        else 
            b_local_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_local_7_we0_assign_proc : process(tmp_14_reg_1313, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_14_reg_1313 = ap_const_lv3_7))) then 
            b_local_7_we0 <= ap_const_logic_1;
        else 
            b_local_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_704_p0 <= cast_cast_fu_700_p1(29 - 1 downto 0);
    bound_fu_704_p1 <= cast_cast_fu_700_p1(29 - 1 downto 0);
    bound_fu_704_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_704_p0) * unsigned(bound_fu_704_p1), 58));
    bram_0_Addr_A <= std_logic_vector(shift_left(unsigned(bram_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    bram_0_Addr_A_orig <= tmp_21_fu_930_p1(32 - 1 downto 0);
    bram_0_Clk_A <= ap_clk;
    bram_0_Din_A <= ap_const_lv32_0;

    bram_0_EN_A_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bram_0_EN_A <= ap_const_logic_1;
        else 
            bram_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    bram_0_Rst_A <= ap_rst_n_inv;
    bram_0_WEN_A <= ap_const_lv4_0;
    bram_1_Addr_A <= std_logic_vector(shift_left(unsigned(bram_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    bram_1_Addr_A_orig <= tmp_26_fu_960_p1(32 - 1 downto 0);
    bram_1_Clk_A <= ap_clk;
    bram_1_Din_A <= ap_const_lv32_0;

    bram_1_EN_A_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            bram_1_EN_A <= ap_const_logic_1;
        else 
            bram_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    bram_1_Rst_A <= ap_rst_n_inv;
    bram_1_WEN_A <= ap_const_lv4_0;
    bram_2_Addr_A <= std_logic_vector(shift_left(unsigned(bram_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    bram_2_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, bram_2_addr_1_reg_1442, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_flag00000000, ap_block_pp1_stage0_flag00000000, tmp_9_fu_823_p1, ap_block_pp1_stage1_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00000000 = ap_const_boolean_0)))) then 
            bram_2_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bram_2_addr_1_reg_1442),32));
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            bram_2_Addr_A_orig <= tmp_9_fu_823_p1(32 - 1 downto 0);
        else 
            bram_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    bram_2_Clk_A <= ap_clk;

    bram_2_Din_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_flag00000000, ap_block_pp1_stage0_flag00000000, tmp_36_7_fu_1149_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            bram_2_Din_A <= tmp_36_7_fu_1149_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            bram_2_Din_A <= ap_const_lv32_0;
        else 
            bram_2_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bram_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_flag00011001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_block_pp1_stage1_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            bram_2_EN_A <= ap_const_logic_1;
        else 
            bram_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    bram_2_Rst_A <= ap_rst_n_inv;

    bram_2_WEN_A_assign_proc : process(exitcond_flatten_reg_1217, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001, exitcond_flatten2_reg_1383, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_flag00011001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1217)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            bram_2_WEN_A <= ap_const_lv4_F;
        else 
            bram_2_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    cast_cast_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_write_assign_fu_686_p4),58));
    exitcond_flatten1_fu_710_p2 <= "1" when (indvar_flatten1_reg_525 = bound_reg_1182) else "0";
    exitcond_flatten2_fu_965_p2 <= "1" when (indvar_flatten2_phi_fu_642_p4 = ap_const_lv7_40) else "0";
    exitcond_flatten_fu_748_p2 <= "1" when (indvar_flatten_reg_570 = ap_const_lv7_40) else "0";
    i2_1_cast_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_1_reg_615),32));

    i2_2_phi_fu_653_p4_assign_proc : process(i2_2_reg_649, exitcond_flatten2_reg_1383, ap_CS_fsm_pp1_stage0, a_local_0_load_mid2_1_reg_1392, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            i2_2_phi_fu_653_p4 <= a_local_0_load_mid2_1_reg_1392;
        else 
            i2_2_phi_fu_653_p4 <= i2_2_reg_649;
        end if; 
    end process;

    i2_3_fu_860_p2 <= std_logic_vector(unsigned(i2_1_reg_615) + unsigned(ap_const_lv4_1));
    i2_4_fu_991_p2 <= std_logic_vector(unsigned(i2_2_phi_fu_653_p4) + unsigned(ap_const_lv4_1));

    i2_phi_fu_585_p4_assign_proc : process(i2_reg_581, exitcond_flatten_reg_1217, ap_CS_fsm_pp0_stage0, tmp1_mid2_v_v_v_v_reg_1226, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1217) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            i2_phi_fu_585_p4 <= tmp1_mid2_v_v_v_v_reg_1226;
        else 
            i2_phi_fu_585_p4 <= i2_reg_581;
        end if; 
    end process;

    i2_s_fu_774_p2 <= std_logic_vector(unsigned(i2_phi_fu_585_p4) + unsigned(ap_const_lv4_1));
    i_mid2_fu_740_p3 <= 
        i_reg_536 when (tmp_2_fu_721_p2(0) = '1') else 
        i_s_fu_734_p2;
    i_s_fu_734_p2 <= std_logic_vector(unsigned(i_reg_536) + unsigned(ap_const_lv32_8));

    indvar_flatten2_phi_fu_642_p4_assign_proc : process(indvar_flatten2_reg_638, exitcond_flatten2_reg_1383, ap_CS_fsm_pp1_stage0, indvar_flatten_next2_reg_1387, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten2_phi_fu_642_p4 <= indvar_flatten_next2_reg_1387;
        else 
            indvar_flatten2_phi_fu_642_p4 <= indvar_flatten2_reg_638;
        end if; 
    end process;

    indvar_flatten_next1_fu_715_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_525) + unsigned(ap_const_lv58_1));
    indvar_flatten_next2_fu_971_p2 <= std_logic_vector(unsigned(indvar_flatten2_phi_fu_642_p4) + unsigned(ap_const_lv7_1));
    indvar_flatten_next_fu_754_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_570) + unsigned(ap_const_lv7_1));
    j2_1_cast_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_1_reg_626),32));
    j2_2_cast_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_2_mid2_fu_983_p3),32));
    j2_2_mid2_fu_983_p3 <= 
        ap_const_lv4_0 when (tmp_16_fu_977_p2(0) = '1') else 
        j2_2_phi_fu_664_p4;

    j2_2_phi_fu_664_p4_assign_proc : process(j2_2_reg_660, exitcond_flatten2_reg_1383, ap_CS_fsm_pp1_stage0, j2_5_reg_1482, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_flatten2_reg_1383) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_flag00000000 = ap_const_boolean_0))) then 
            j2_2_phi_fu_664_p4 <= j2_5_reg_1482;
        else 
            j2_2_phi_fu_664_p4 <= j2_2_reg_660;
        end if; 
    end process;

    j2_3_fu_817_p2 <= std_logic_vector(unsigned(j2_mid2_fu_766_p3) + unsigned(ap_const_lv4_1));
    j2_4_fu_913_p2 <= std_logic_vector(unsigned(j2_1_reg_626) + unsigned(ap_const_lv4_1));
    j2_5_fu_1063_p2 <= std_logic_vector(unsigned(j2_2_mid2_fu_983_p3) + unsigned(ap_const_lv4_1));
    j2_cast_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_mid2_fu_766_p3),32));
    j2_mid2_fu_766_p3 <= 
        ap_const_lv4_0 when (tmp_7_fu_760_p2(0) = '1') else 
        j2_reg_592;
    j_1_fu_845_p2 <= std_logic_vector(unsigned(j_mid2_reg_1201) + unsigned(ap_const_lv32_8));
    j_mid2_fu_726_p3 <= 
        j_reg_559 when (tmp_2_fu_721_p2(0) = '1') else 
        ap_const_lv32_0;
    j_s_fu_838_p3 <= 
        p_op_fu_832_p2 when (tmp_2_reg_1196(0) = '1') else 
        ap_const_lv32_1;
    k_1_fu_1156_p2 <= std_logic_vector(unsigned(k_reg_603) + unsigned(ap_const_lv32_8));
    p_op_fu_832_p2 <= std_logic_vector(unsigned(tmp_5_reg_547) + unsigned(ap_const_lv32_1));
    reg_0_o <= dummy_1_fu_112;

    reg_0_o_ap_vld_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            reg_0_o_ap_vld <= ap_const_logic_1;
        else 
            reg_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    reg_write_assign_fu_686_p4 <= tmp_fu_680_p2(31 downto 3);
    tmp10_fu_1138_p2 <= std_logic_vector(unsigned(tmp_31_5_fu_1105_p2) + unsigned(tmp11_fu_1132_p2));
    tmp11_fu_1132_p2 <= std_logic_vector(unsigned(tmp_31_7_fu_1113_p2) + unsigned(tmp_31_6_fu_1109_p2));
    tmp1_mid2_fu_802_p2 <= std_logic_vector(unsigned(j_mid2_reg_1201) + unsigned(tmp1_mid2_v_fu_797_p2));
    tmp1_mid2_v_fu_797_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(dummy_1_load_reg_1168) * signed(tmp1_mid2_v_v_fu_792_p2))), 32));
    tmp1_mid2_v_v_fu_792_p2 <= std_logic_vector(unsigned(tmp1_mid2_v_v_v_fu_788_p1) + unsigned(i_mid2_reg_1209));
    tmp1_mid2_v_v_v_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_mid2_v_v_v_v_fu_780_p3),32));
    tmp1_mid2_v_v_v_v_fu_780_p3 <= 
        i2_s_fu_774_p2 when (tmp_7_fu_760_p2(0) = '1') else 
        i2_phi_fu_585_p4;
    tmp2_fu_919_p2 <= std_logic_vector(unsigned(k_reg_603) + unsigned(j2_1_cast_fu_903_p1));
    tmp3_fu_951_p2 <= std_logic_vector(unsigned(j_mid2_reg_1201) + unsigned(j2_1_cast_reg_1317));
    tmp4_mid2_fu_1031_p2 <= std_logic_vector(unsigned(tmp4_mid2_v_fu_1026_p2) + unsigned(j_mid2_reg_1201));
    tmp4_mid2_v_fu_1026_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp4_mid2_v_v_fu_1021_p2) * signed(dummy_1_load_reg_1168))), 32));
    tmp4_mid2_v_v_fu_1021_p2 <= std_logic_vector(unsigned(i_mid2_reg_1209) + unsigned(tmp4_mid2_v_v_v_fu_1017_p1));
    tmp4_mid2_v_v_v_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_local_0_load_mid2_1_fu_997_p3),32));
    tmp5_fu_1126_p2 <= std_logic_vector(unsigned(tmp6_fu_1117_p2) + unsigned(tmp7_fu_1122_p2));
    tmp6_fu_1117_p2 <= std_logic_vector(unsigned(tmp_19_reg_1502) + unsigned(bram_2_Dout_A));
    tmp7_fu_1122_p2 <= std_logic_vector(unsigned(tmp_31_2_reg_1512) + unsigned(tmp_31_1_reg_1507));
    tmp8_fu_1144_p2 <= std_logic_vector(unsigned(tmp9_reg_1532) + unsigned(tmp10_fu_1138_p2));
    tmp9_fu_1099_p2 <= std_logic_vector(unsigned(tmp_31_4_fu_1093_p2) + unsigned(tmp_31_3_fu_1087_p2));
    tmp_10_fu_871_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(dummy_1_load_reg_1168) * signed(tmp_s_fu_866_p2))), 32));
    tmp_11_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_1_reg_615),64));
    tmp_12_fu_888_p2 <= std_logic_vector(unsigned(i2_1_cast_fu_850_p1) + unsigned(k_reg_603));
    tmp_13_fu_894_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(dummy_1_load_reg_1168) * signed(tmp_12_fu_888_p2))), 32));
    tmp_14_fu_899_p1 <= i2_1_reg_615(3 - 1 downto 0);
    tmp_15_fu_907_p2 <= "1" when (j2_1_reg_626 = ap_const_lv4_8) else "0";
    tmp_16_fu_977_p2 <= "1" when (j2_2_phi_fu_664_p4 = ap_const_lv4_8) else "0";
    tmp_18_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_2_mid2_fu_983_p3),64));
    tmp_19_fu_1069_p0 <= a_local_0_q0;
    tmp_19_fu_1069_p1 <= b_local_0_q0;
    tmp_19_fu_1069_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_19_fu_1069_p0) * signed(tmp_19_fu_1069_p1))), 32));
    tmp_1_fu_854_p2 <= "1" when (i2_1_reg_615 = ap_const_lv4_8) else "0";
    tmp_20_fu_925_p2 <= std_logic_vector(unsigned(tmp2_fu_919_p2) + unsigned(tmp_10_reg_1263));
    tmp_21_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_925_p2),64));
    tmp_22_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_1_reg_626),64));
    tmp_23_fu_1052_p2 <= std_logic_vector(unsigned(j2_2_cast_fu_1036_p1) + unsigned(tmp4_mid2_fu_1031_p2));
    tmp_24_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1052_p2),64));
    tmp_25_fu_955_p2 <= std_logic_vector(unsigned(tmp3_fu_951_p2) + unsigned(tmp_13_reg_1268));
    tmp_26_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_955_p2),64));
    tmp_27_fu_947_p1 <= j2_1_reg_626(3 - 1 downto 0);
    tmp_2_fu_721_p2 <= "1" when (unsigned(tmp_5_reg_547) < unsigned(tmp_4_reg_1177)) else "0";
    tmp_31_1_fu_1075_p0 <= a_local_1_q0;
    tmp_31_1_fu_1075_p1 <= b_local_1_q0;
    tmp_31_1_fu_1075_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_31_1_fu_1075_p0) * signed(tmp_31_1_fu_1075_p1))), 32));
    tmp_31_2_fu_1081_p0 <= a_local_2_q0;
    tmp_31_2_fu_1081_p1 <= b_local_2_q0;
    tmp_31_2_fu_1081_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_31_2_fu_1081_p0) * signed(tmp_31_2_fu_1081_p1))), 32));
    tmp_31_3_fu_1087_p0 <= a_local_3_q0;
    tmp_31_3_fu_1087_p1 <= b_local_3_q0;
    tmp_31_3_fu_1087_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_31_3_fu_1087_p0) * signed(tmp_31_3_fu_1087_p1))), 32));
    tmp_31_4_fu_1093_p0 <= a_local_4_q0;
    tmp_31_4_fu_1093_p1 <= b_local_4_q0;
    tmp_31_4_fu_1093_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_31_4_fu_1093_p0) * signed(tmp_31_4_fu_1093_p1))), 32));
    tmp_31_5_fu_1105_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(a_local_5_load_reg_1487) * signed(b_local_5_load_reg_1517))), 32));
    tmp_31_6_fu_1109_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(a_local_6_load_reg_1492) * signed(b_local_6_load_reg_1522))), 32));
    tmp_31_7_fu_1113_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(a_local_7_load_reg_1497) * signed(b_local_7_load_reg_1527))), 32));
    tmp_36_7_fu_1149_p2 <= std_logic_vector(unsigned(tmp5_fu_1126_p2) + unsigned(tmp8_fu_1144_p2));
    tmp_4_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_write_assign_fu_686_p4),32));
    tmp_6_fu_827_p2 <= "1" when (unsigned(k_reg_603) < unsigned(dummy_1_load_reg_1168)) else "0";
    tmp_7_fu_760_p2 <= "1" when (j2_reg_592 = ap_const_lv4_8) else "0";
    tmp_8_fu_811_p2 <= std_logic_vector(unsigned(tmp1_mid2_fu_802_p2) + unsigned(j2_cast_fu_807_p1));
    tmp_9_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_1231),64));
    tmp_fu_680_p0 <= dummy_1_fu_112;
    tmp_fu_680_p2 <= std_logic_vector(signed(tmp_fu_680_p0) + signed(ap_const_lv32_7));
    tmp_s_fu_866_p2 <= std_logic_vector(unsigned(i2_1_cast_fu_850_p1) + unsigned(i_mid2_reg_1209));
end behav;
